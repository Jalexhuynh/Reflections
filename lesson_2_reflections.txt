sWhat happens when you initialize a repository? Why do you need to do it?
	It turns the current directory into a repository.
	This enables the metadata of all of the files to start being tracked,
	meaning you can start reviewing the commits and changes to all the
	files within the repository!

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area is like a middle-ground, where you place up some files
	that you will want to commit but do not finalize committing yet.
	This has a benefit of being able to choose which files to commit, and
	you can also prevent a commit from happening in case it is accidental.

How can you use the staging area to make sure you have one commit per logical
change?
	You can use the staging area by using the following comparisons:
	git diff 			- compares the [staging area] to the [working directory]
	git diff --staged 	- compares [commit 1] to the [staging area]
	git diff commit1 commit 2	- compares the two commits

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branching helps me make different (semi-drastic) versions of a project
	without having to commit the entire project to this new change.

How do the diagrams help you visualize the branch structure?
	The diagrams help me see where the branches lead to, as well as where
	they root from so I can see the pathways of my project tree.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	The result merges the changes of two branches together, using the last
	common ancestor between the two branches as the reference point. The diagram represents it as a tree format.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
	The automatic merging will use the reference diff to decide what to remove
	and what to add appropriately. However, when there's a discrepancy, git 
	will inform you of a conflict and will have you manually go an change it
	so that git doesn't merge changes that could work against eachother or 
	be redundant.
	